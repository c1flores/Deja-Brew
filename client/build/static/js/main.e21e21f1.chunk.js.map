{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/GlobalState.js","pages/Home.js","utils/auth.js","utils/mutations.js","pages/SignUp.js","pages/Login.js","components/Nav/index.js","App.js","index.js"],"names":["reducer","state","action","type","drinks","cartOpen","cart","item","newState","filter","_id","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","Home","Jumbotron","style","backgroundColor","fluid","Container","Row","Col","className","Image","src","alt","Button","variant","href","size","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN","gql","ADD_USER","SignupForm","useState","email","password","formState","setFormState","useMutation","addUser","handleFormSubmit","event","preventDefault","console","log","firstName","lastName","variables","mutationResponse","data","Auth","login","handleChange","target","name","minHeight","md","lg","Card","Body","Form","onSubmit","Group","controlId","Label","Control","isRequired","onChange","block","LoginForm","error","NavBar","loggedIn","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","id","Nav","onClick","logout","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","ApolloProvider","path","element","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e21e21f1.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_DRINKS,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n} from \"./actions\";\r\n\r\n// Main reducer function for managing application state\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DRINKS:\r\n      return {\r\n        ...state,\r\n        drinks: [...action.drinks],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.item],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.drinks],\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((item) => {\r\n        return item._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}\r\n","// Objects that tell Redux the type of action to be performed,\r\nexport const UPDATE_DRINKS = \"UPDATE_DRINKS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useProductReducer } from \"./reducers\";\r\n\r\n// Create our theme context using React.CreateContext()\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\n// Creating our theme provider. Accepts an argument of \"props\"..\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useProductReducer({\r\n    drinks: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: \"\",\r\n  });\r\n\r\n  // The provider component will wrap all other components inside of it that need access to our global state\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\n// Create a custom hook that allows easy access to our ThemeContext values\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Jumbotron, Button, Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <Jumbotron style={{ backgroundColor: \"transparent\" }} fluid>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <Image src=\"../public/images/cover.jpg\" alt=\"coffee banner\" fluid />\r\n            <h1 className=\"mt-4\">Sleepy?</h1>\r\n            <h2>\r\n              {\"Why not take a coffee break?\"}\r\n              <br></br>Order from our delicious menu\r\n            </h2>\r\n            <Button className=\"mt-4\" variant=\"secondary\" href=\"/menu\" size=\"lg\">\r\n              Order Now\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"id_token\");\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem(\"id_token\", idToken);\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"id_token\");\r\n    window.location.assign(\"/\");\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import gql from \"graphql-tag\";\r\n\r\n//Modifying back-end data with mutations\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($drinks: [ID]!) {\r\n    addOrder(drinks: $drinks) {\r\n      purchaseDate\r\n      drinks {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        category {\r\n          name\r\n        }\r\n        customize {\r\n          size\r\n          milk\r\n          flavor\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Card,\r\n  Jumbotron,\r\n} from \"react-bootstrap\";\r\n\r\nfunction SignupForm(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log({\r\n      email: formState.email,\r\n      password: formState.password,\r\n      firstName: formState.firstName,\r\n      lastName: formState.lastName,\r\n    });\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(event.target.type);\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Jumbotron\r\n      style={{ backgroundColor: \"transparent\", minHeight: \"100vh\" }}\r\n      fluid\r\n    >\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md lg=\"4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Form onSubmit={handleFormSubmit} action=\"submit\">\r\n                  <Form.Group controlId=\"formFirst\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"firstname\"\r\n                      name=\"firstName\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formLast\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"lastname\"\r\n                      name=\"lastName\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"dark\" type=\"submit\" block>\r\n                    Signup\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Card,\r\n  Jumbotron,\r\n} from \"react-bootstrap\";\r\n\r\nfunction LoginForm(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      console.log(formState.email);\r\n      console.log(formState.password);\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Jumbotron\r\n      style={{ backgroundColor: \"transparent\", minHeight: \"100vh\" }}\r\n      fluid\r\n    >\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md lg=\"4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Form onSubmit={handleFormSubmit} action=\"submit\">\r\n                  <Form.Group controlId=\"formEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      isRequired\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  {error ? (\r\n                    <div>\r\n                      <p className=\"error-text\">\r\n                        The provided credentials are incorrect\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n                  <Button variant=\"dark\" type=\"submit\" block>\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nfunction NavBar(props) {\r\n  if (Auth.loggedIn()) {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          {\"<Deja Brew> ☕\"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/menu\">\r\n              Menu\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/cart\">\r\n              Cart\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/profile\">\r\n              Profile\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  } else {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          {\"<Deja Brew> ☕\"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/menu\">\r\n              Menu\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/cart\">\r\n              Cart\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/signup\">\r\n              Signup\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { StoreProvider } from \"./utils/GlobalState\";\r\n\r\nimport Home from \"./pages/Home\";\r\n// import Menu from './pages/Menu';\r\n// import MyOrder from './pages/MyOrder';\r\n// import History from './pages/History';\r\nimport SignupForm from \"./pages/SignUp\";\r\nimport LoginForm from \"./pages/Login\";\r\n// import NoMatch from \"./pages/NoMatch\";\r\n// import Success from \"./pages/Success\";\r\n\r\n// import FooterStrap from './components/Footer'\r\nimport NavBar from \"./components/Nav\";\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem(\"id_token\");\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n  },\r\n  uri: \"http://localhost:3001/graphql\",\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <StoreProvider>\r\n          <NavBar />\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            {/* <Route exact path=\"/menu\" component={<Menu/>}></Route> */}\r\n            <Route path=\"/login\" element={<LoginForm />} />\r\n            <Route path=\"/signup\" element={<SignupForm />} />\r\n          </Routes>\r\n          {/*<FooterStrap />*/}\r\n        </StoreProvider>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}