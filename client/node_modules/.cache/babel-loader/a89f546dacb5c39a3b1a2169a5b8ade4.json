{"ast":null,"code":"import objectEntries from '../polyfills/objectEntries';\nimport inspect from '../jsutils/inspect';\nimport toObjMap from '../jsutils/toObjMap';\nimport devAssert from '../jsutils/devAssert';\nimport instanceOf from '../jsutils/instanceOf';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport { DirectiveLocation } from '../language/directiveLocation';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport { argsToArgsConfig, GraphQLNonNull } from './definition';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\"));\n  }\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective = /*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = config.isRepeatable != null && config.isRepeatable;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    config.name || devAssert(0, 'Directive must be named.');\n    Array.isArray(config.locations) || devAssert(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = config.args || {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n        arg = _ref[1];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        extensions: arg.extensions && toObjMap(arg.extensions),\n        astNode: arg.astNode\n      };\n    });\n  }\n  var _proto = GraphQLDirective.prototype;\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective]);\nexport function isSpecifiedDirective(directive) {\n  return isDirective(directive) && specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}","map":{"version":3,"names":["objectEntries","inspect","toObjMap","devAssert","instanceOf","defineToJSON","isObjectLike","defineToStringTag","DirectiveLocation","GraphQLString","GraphQLBoolean","argsToArgsConfig","GraphQLNonNull","isDirective","directive","GraphQLDirective","assertDirective","Error","concat","config","name","description","locations","isRepeatable","extensions","astNode","Array","isArray","args","map","_ref","argName","arg","undefined","type","defaultValue","_proto","prototype","toString","toConfig","GraphQLIncludeDirective","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","FIELD_DEFINITION","ENUM_VALUE","reason","specifiedDirectives","Object","freeze","isSpecifiedDirective","some","_ref2"],"sources":["C:/Users/Christian Flores/Desktop/UCB-VIRT-FSF-PT-07-2022-U-LOLC/22-State/02-Challenge/Main/client/node_modules/graphql/type/directives.mjs"],"sourcesContent":["import objectEntries from '../polyfills/objectEntries';\nimport inspect from '../jsutils/inspect';\nimport toObjMap from '../jsutils/toObjMap';\nimport devAssert from '../jsutils/devAssert';\nimport instanceOf from '../jsutils/instanceOf';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport { DirectiveLocation } from '../language/directiveLocation';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport { argsToArgsConfig, GraphQLNonNull } from './definition';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\"));\n  }\n\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective =\n/*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = config.isRepeatable != null && config.isRepeatable;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    config.name || devAssert(0, 'Directive must be named.');\n    Array.isArray(config.locations) || devAssert(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = config.args || {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n          arg = _ref[1];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        extensions: arg.extensions && toObjMap(arg.extensions),\n        astNode: arg.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective]);\nexport function isSpecifiedDirective(directive) {\n  return isDirective(directive) && specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}