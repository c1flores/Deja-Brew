{"ast":null,"code":"import { Kind } from '../language/kinds';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { ValuesOfCorrectType } from '../validation/rules/ValuesOfCorrectType';\nimport { ValidationContext } from '../validation/ValidationContext';\nimport { GraphQLSchema } from '../type/schema';\nimport { TypeInfo } from './TypeInfo';\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n *\n * This function will be removed in v15\n */\n\nexport function isValidLiteralValue(type, valueNode) {\n  var emptySchema = new GraphQLSchema({});\n  var emptyDoc = {\n    kind: Kind.DOCUMENT,\n    definitions: []\n  };\n  var typeInfo = new TypeInfo(emptySchema, undefined, type);\n  var context = new ValidationContext(emptySchema, emptyDoc, typeInfo);\n  var visitor = ValuesOfCorrectType(context);\n  visit(valueNode, visitWithTypeInfo(typeInfo, visitor));\n  return context.getErrors();\n}","map":{"version":3,"names":["Kind","visit","visitWithTypeInfo","ValuesOfCorrectType","ValidationContext","GraphQLSchema","TypeInfo","isValidLiteralValue","type","valueNode","emptySchema","emptyDoc","kind","DOCUMENT","definitions","typeInfo","undefined","context","visitor","getErrors"],"sources":["C:/Users/Christian Flores/Desktop/Deja-Brew/client/node_modules/graphql/utilities/isValidLiteralValue.mjs"],"sourcesContent":["import { Kind } from '../language/kinds';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { ValuesOfCorrectType } from '../validation/rules/ValuesOfCorrectType';\nimport { ValidationContext } from '../validation/ValidationContext';\nimport { GraphQLSchema } from '../type/schema';\nimport { TypeInfo } from './TypeInfo';\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n *\n * This function will be removed in v15\n */\n\nexport function isValidLiteralValue(type, valueNode) {\n  var emptySchema = new GraphQLSchema({});\n  var emptyDoc = {\n    kind: Kind.DOCUMENT,\n    definitions: []\n  };\n  var typeInfo = new TypeInfo(emptySchema, undefined, type);\n  var context = new ValidationContext(emptySchema, emptyDoc, typeInfo);\n  var visitor = ValuesOfCorrectType(context);\n  visit(valueNode, visitWithTypeInfo(typeInfo, visitor));\n  return context.getErrors();\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,SAASC,KAAK,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC9D,SAASC,mBAAmB,QAAQ,yCAAyC;AAC7E,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAmB,CAACC,IAAI,EAAEC,SAAS,EAAE;EACnD,IAAIC,WAAW,GAAG,IAAIL,aAAa,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIM,QAAQ,GAAG;IACbC,IAAI,EAAEZ,IAAI,CAACa,QAAQ;IACnBC,WAAW,EAAE;EACf,CAAC;EACD,IAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACI,WAAW,EAAEM,SAAS,EAAER,IAAI,CAAC;EACzD,IAAIS,OAAO,GAAG,IAAIb,iBAAiB,CAACM,WAAW,EAAEC,QAAQ,EAAEI,QAAQ,CAAC;EACpE,IAAIG,OAAO,GAAGf,mBAAmB,CAACc,OAAO,CAAC;EAC1ChB,KAAK,CAACQ,SAAS,EAAEP,iBAAiB,CAACa,QAAQ,EAAEG,OAAO,CAAC,CAAC;EACtD,OAAOD,OAAO,CAACE,SAAS,EAAE;AAC5B"},"metadata":{},"sourceType":"module"}