{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n  var astDefinitions = context.getDocument().definitions;\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), node));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), node));\n      }\n    }\n  };\n}\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n        break;\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n      case Kind.INPUT_VALUE_DEFINITION:\n        {\n          var parentNode = ancestors[ancestors.length - 3];\n          return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n        }\n    }\n  }\n}","map":{"version":3,"names":["GraphQLError","Kind","DirectiveLocation","specifiedDirectives","unknownDirectiveMessage","directiveName","concat","misplacedDirectiveMessage","location","KnownDirectives","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_i2","length","directive","name","locations","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","value","map","Directive","node","key","parent","path","ancestors","reportError","candidateLocation","getDirectiveLocationForASTPath","indexOf","appliedTo","Array","isArray","OPERATION_DEFINITION","operation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION"],"sources":["C:/Users/Christian Flores/Desktop/UCB-VIRT-FSF-PT-07-2022-U-LOLC/22-State/02-Challenge/Main/client/node_modules/graphql/validation/rules/KnownDirectives.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        {\n          var parentNode = ancestors[ancestors.length - 3];\n          return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n        }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}