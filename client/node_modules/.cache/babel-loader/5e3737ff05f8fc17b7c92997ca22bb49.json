{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isExecutableDefinitionNode } from '../../language/predicates';\nexport function nonExecutableDefinitionMessage(defName) {\n  return \"The \".concat(defName, \" definition is not executable.\");\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n        if (!isExecutableDefinitionNode(definition)) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : definition.name.value), definition));\n        }\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","Kind","isExecutableDefinitionNode","nonExecutableDefinitionMessage","defName","concat","ExecutableDefinitions","context","Document","node","_i2","_node$definitions2","definitions","length","definition","reportError","kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","value"],"sources":["C:/Users/Christian Flores/Desktop/Deja-Brew/client/node_modules/graphql/validation/rules/ExecutableDefinitions.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isExecutableDefinitionNode } from '../../language/predicates';\nexport function nonExecutableDefinitionMessage(defName) {\n  return \"The \".concat(defName, \" definition is not executable.\");\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : definition.name.value), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,OAAO,SAASC,8BAA8B,CAACC,OAAO,EAAE;EACtD,OAAO,MAAM,CAACC,MAAM,CAACD,OAAO,EAAE,gCAAgC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,qBAAqB,CAACC,OAAO,EAAE;EAC7C,OAAO;IACLC,QAAQ,EAAE,SAASA,QAAQ,CAACC,IAAI,EAAE;MAChC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,kBAAkB,GAAGF,IAAI,CAACG,WAAW,EAAEF,GAAG,GAAGC,kBAAkB,CAACE,MAAM,EAAEH,GAAG,EAAE,EAAE;QAC/F,IAAII,UAAU,GAAGH,kBAAkB,CAACD,GAAG,CAAC;QAExC,IAAI,CAACR,0BAA0B,CAACY,UAAU,CAAC,EAAE;UAC3CP,OAAO,CAACQ,WAAW,CAAC,IAAIf,YAAY,CAACG,8BAA8B,CAACW,UAAU,CAACE,IAAI,KAAKf,IAAI,CAACgB,iBAAiB,IAAIH,UAAU,CAACE,IAAI,KAAKf,IAAI,CAACiB,gBAAgB,GAAG,QAAQ,GAAGJ,UAAU,CAACK,IAAI,CAACC,KAAK,CAAC,EAAEN,UAAU,CAAC,CAAC;QAC/M;MACF;MAEA,OAAO,KAAK;IACd;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}