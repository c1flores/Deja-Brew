{"ast":null,"code":"import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isNonNullType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators';\nexport function badVarPosMessage(varName, varType, expectedType) {\n  return \"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varType, \"\\\" used in position expecting type \\\"\").concat(expectedType, \"\\\".\");\n}\n/**\n * Variables passed to field arguments conform to type\n */\n\nexport function VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              context.reportError(new GraphQLError(badVarPosMessage(varName, inspect(varType), inspect(type)), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n    var nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n  return isTypeSubTypeOf(schema, varType, locationType);\n}","map":{"version":3,"names":["inspect","GraphQLError","Kind","isNonNullType","typeFromAST","isTypeSubTypeOf","badVarPosMessage","varName","varType","expectedType","concat","VariablesInAllowedPosition","context","varDefMap","Object","create","OperationDefinition","enter","leave","operation","usages","getRecursiveVariableUsages","_i2","length","_ref2","node","type","defaultValue","name","value","varDef","schema","getSchema","allowedVariableUsage","reportError","VariableDefinition","variable","varDefaultValue","locationType","locationDefaultValue","hasNonNullVariableDefaultValue","kind","NULL","hasLocationDefaultValue","undefined","nullableLocationType","ofType"],"sources":["C:/Users/Christian Flores/Desktop/Deja-Brew/client/node_modules/graphql/validation/rules/VariablesInAllowedPosition.mjs"],"sourcesContent":["import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isNonNullType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators';\nexport function badVarPosMessage(varName, varType, expectedType) {\n  return \"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varType, \"\\\" used in position expecting type \\\"\").concat(expectedType, \"\\\".\");\n}\n/**\n * Variables passed to field arguments conform to type\n */\n\nexport function VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              context.reportError(new GraphQLError(badVarPosMessage(varName, inspect(varType), inspect(type)), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    var nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}