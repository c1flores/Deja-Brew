{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateDirectiveNameMessage(directiveName) {\n  return \"There can be only one directive named \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function existedDirectiveNameMessage(directiveName) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\");\n}\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\n\nexport function UniqueDirectiveNames(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n      if (schema && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(existedDirectiveNameMessage(directiveName), node.name));\n        return;\n      }\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(duplicateDirectiveNameMessage(directiveName), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","duplicateDirectiveNameMessage","directiveName","concat","existedDirectiveNameMessage","UniqueDirectiveNames","context","knownDirectiveNames","Object","create","schema","getSchema","DirectiveDefinition","node","name","value","getDirective","reportError"],"sources":["C:/Users/Christian Flores/Desktop/UCB-VIRT-FSF-PT-07-2022-U-LOLC/22-State/02-Challenge/Main/client/node_modules/graphql/validation/rules/UniqueDirectiveNames.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateDirectiveNameMessage(directiveName) {\n  return \"There can be only one directive named \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function existedDirectiveNameMessage(directiveName) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\");\n}\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\n\nexport function UniqueDirectiveNames(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(existedDirectiveNameMessage(directiveName), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(duplicateDirectiveNameMessage(directiveName), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAO,SAASC,6BAA6B,CAACC,aAAa,EAAE;EAC3D,OAAO,0CAA0C,CAACC,MAAM,CAACD,aAAa,EAAE,KAAK,CAAC;AAChF;AACA,OAAO,SAASE,2BAA2B,CAACF,aAAa,EAAE;EACzD,OAAO,cAAc,CAACC,MAAM,CAACD,aAAa,EAAE,0DAA0D,CAAC;AACzG;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,oBAAoB,CAACC,OAAO,EAAE;EAC5C,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC7C,IAAIC,MAAM,GAAGJ,OAAO,CAACK,SAAS,EAAE;EAChC,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAmB,CAACC,IAAI,EAAE;MACtD,IAAIX,aAAa,GAAGW,IAAI,CAACC,IAAI,CAACC,KAAK;MAEnC,IAAIL,MAAM,IAAIA,MAAM,CAACM,YAAY,CAACd,aAAa,CAAC,EAAE;QAChDI,OAAO,CAACW,WAAW,CAAC,IAAIjB,YAAY,CAACI,2BAA2B,CAACF,aAAa,CAAC,EAAEW,IAAI,CAACC,IAAI,CAAC,CAAC;QAC5F;MACF;MAEA,IAAIP,mBAAmB,CAACL,aAAa,CAAC,EAAE;QACtCI,OAAO,CAACW,WAAW,CAAC,IAAIjB,YAAY,CAACC,6BAA6B,CAACC,aAAa,CAAC,EAAE,CAACK,mBAAmB,CAACL,aAAa,CAAC,EAAEW,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACtI,CAAC,MAAM;QACLP,mBAAmB,CAACL,aAAa,CAAC,GAAGW,IAAI,CAACC,IAAI;MAChD;MAEA,OAAO,KAAK;IACd;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}