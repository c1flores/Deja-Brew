{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n  var astDefinitions = context.getDocument().definitions;\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n        return arg.name.value;\n      }) : [];\n    }\n  }\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n          }\n        }\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","didYouMean","suggestionList","GraphQLError","Kind","specifiedDirectives","unknownArgMessage","argName","fieldName","typeName","suggestedArgs","concat","map","x","unknownDirectiveArgMessage","directiveName","KnownArgumentNames","context","KnownArgumentNamesOnDirectives","Argument","argNode","argDef","getArgument","fieldDef","getFieldDef","parentType","getParentType","name","knownArgsNames","args","arg","reportError","directiveArgs","create","schema","getSchema","definedDirectives","getDirectives","_i2","directive","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","Directive","directiveNode","knownArgs","_i6","_directiveNode$argume2","indexOf","suggestions"],"sources":["C:/Users/Christian Flores/Desktop/Deja-Brew/client/node_modules/graphql/validation/rules/KnownArgumentNames.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n        return arg.name.value;\n      }) : [];\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}