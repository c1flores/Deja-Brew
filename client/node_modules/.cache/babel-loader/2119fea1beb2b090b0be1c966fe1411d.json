{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateInputFieldMessage(fieldName) {\n  return \"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\");\n}\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\n\nexport function UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","duplicateInputFieldMessage","fieldName","concat","UniqueInputFieldNames","context","knownNameStack","knownNames","Object","create","ObjectValue","enter","push","leave","pop","ObjectField","node","name","value","reportError"],"sources":["C:/Users/Christian Flores/Desktop/UCB-VIRT-FSF-PT-07-2022-U-LOLC/22-State/02-Challenge/Main/client/node_modules/graphql/validation/rules/UniqueInputFieldNames.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateInputFieldMessage(fieldName) {\n  return \"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\");\n}\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\n\nexport function UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAO,SAASC,0BAA0B,CAACC,SAAS,EAAE;EACpD,OAAO,4CAA4C,CAACC,MAAM,CAACD,SAAS,EAAE,KAAK,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,qBAAqB,CAACC,OAAO,EAAE;EAC7C,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACpC,OAAO;IACLC,WAAW,EAAE;MACXC,KAAK,EAAE,SAASA,KAAK,GAAG;QACtBL,cAAc,CAACM,IAAI,CAACL,UAAU,CAAC;QAC/BA,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAClC,CAAC;MACDI,KAAK,EAAE,SAASA,KAAK,GAAG;QACtBN,UAAU,GAAGD,cAAc,CAACQ,GAAG,EAAE;MACnC;IACF,CAAC;IACDC,WAAW,EAAE,SAASA,WAAW,CAACC,IAAI,EAAE;MACtC,IAAId,SAAS,GAAGc,IAAI,CAACC,IAAI,CAACC,KAAK;MAE/B,IAAIX,UAAU,CAACL,SAAS,CAAC,EAAE;QACzBG,OAAO,CAACc,WAAW,CAAC,IAAInB,YAAY,CAACC,0BAA0B,CAACC,SAAS,CAAC,EAAE,CAACK,UAAU,CAACL,SAAS,CAAC,EAAEc,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAClH,CAAC,MAAM;QACLV,UAAU,CAACL,SAAS,CAAC,GAAGc,IAAI,CAACC,IAAI;MACnC;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}